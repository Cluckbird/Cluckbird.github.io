<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CluckBird</title>
  
  <subtitle>Blog</subtitle>
  <link href="https://blog.cluckbird.cc/atom.xml" rel="self"/>
  
  <link href="https://blog.cluckbird.cc/"/>
  <updated>2021-09-20T05:26:46.507Z</updated>
  <id>https://blog.cluckbird.cc/</id>
  
  <author>
    <name>CluckBird</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用树莓派发送FM信号，从手机蓝牙音频</title>
    <link href="https://blog.cluckbird.cc/2021/09/20/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%91%E9%80%81FM%E4%BF%A1%E5%8F%B7%EF%BC%8C%E4%BB%8E%E6%89%8B%E6%9C%BA%E8%93%9D%E7%89%99%E9%9F%B3%E9%A2%91/"/>
    <id>https://blog.cluckbird.cc/2021/09/20/%E4%BD%BF%E7%94%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E5%8F%91%E9%80%81FM%E4%BF%A1%E5%8F%B7%EF%BC%8C%E4%BB%8E%E6%89%8B%E6%9C%BA%E8%93%9D%E7%89%99%E9%9F%B3%E9%A2%91/</id>
    <published>2021-09-20T05:25:48.000Z</published>
    <updated>2021-09-20T05:26:46.507Z</updated>
    
    <content type="html"><![CDATA[<p>使用树莓派发送FM广播（无线电），透过手机的蓝牙音频</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><blockquote><p>在使用前请先确保自己遵守自己所在地区的法律，发射国家允许的业余无线电频段，且请勿使用放大器</p></blockquote><blockquote><p>中国大陆和香港的FM频段是 87MHZ~108MHZ，其他地区可以自行 Google</p></blockquote><ul><li>一个树莓派（推荐3B+），运行 Raspberry Pi OS</li><li>一个能用的天线（不用也行，就是信号会很差）</li><li>如有金属外壳请先拆掉</li></ul><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><blockquote><p>所有操作均需要 root 权限，如果你有懒癌可以直接切到 root 用户</p></blockquote><h3 id="安装组件"><a href="#安装组件" class="headerlink" title="安装组件"></a>安装组件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install git pulseaudio sox  libsox-fmt-all pulseaudio-module-bluetooth</span><br></pre></td></tr></table></figure><h3 id="Clone-Rpitx"><a href="#Clone-Rpitx" class="headerlink" title="Clone Rpitx"></a>Clone Rpitx</h3><blockquote><p>如果你居住在中国大陆，请保证和 github 的网络连接</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/F5OEO/rpitx</span><br><span class="line"><span class="built_in">cd</span> rpitx</span><br><span class="line">sudo ./install.sh <span class="comment"># 这里会询问你是否允许修改 CPU 配置，请同意</span></span><br><span class="line">sudo reboot <span class="comment"># 重新启动</span></span><br></pre></td></tr></table></figure><h3 id="启动-pulseaudio-服务"><a href="#启动-pulseaudio-服务" class="headerlink" title="启动 pulseaudio 服务"></a>启动 pulseaudio 服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo sh -c <span class="string">&quot;echo &#x27;extra-arguments = --exit-idle-time=-1 --log-target=syslog&#x27; &gt;&gt; /etc/pulse/client.conf&quot;</span></span><br><span class="line">sudo pulseaudio --start &amp;</span><br></pre></td></tr></table></figure><h3 id="透过蓝牙连接到手机"><a href="#透过蓝牙连接到手机" class="headerlink" title="透过蓝牙连接到手机"></a>透过蓝牙连接到手机</h3><h4 id="修改蓝牙装置类型为车载音响"><a href="#修改蓝牙装置类型为车载音响" class="headerlink" title="修改蓝牙装置类型为车载音响"></a>修改蓝牙装置类型为车载音响</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/bluetooth/main.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 把 Class 的值修改为 0x200420</span></span><br><span class="line">...</span><br><span class="line">Class 0x200420</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">sudo reboot <span class="comment"># 重启</span></span><br></pre></td></tr></table></figure><h4 id="连接到手机"><a href="#连接到手机" class="headerlink" title="连接到手机"></a>连接到手机</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo hciconfig hci0 up</span><br><span class="line">sudo bluetoothcli <span class="comment"># 进入蓝牙CLI</span></span><br><span class="line"></span><br><span class="line">discoverable on <span class="comment"># 开启可被扫描</span></span><br></pre></td></tr></table></figure><p>在手机蓝牙页面寻找装置：raspberrypi，配对并连接，共享音频（IOS和Windows装置可能无法使用）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span> <span class="comment"># 退出蓝牙CLI</span></span><br></pre></td></tr></table></figure><h4 id="寻找蓝牙声音输入设备"><a href="#寻找蓝牙声音输入设备" class="headerlink" title="寻找蓝牙声音输入设备"></a>寻找蓝牙声音输入设备</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacmd list | grep <span class="string">&quot;a2dp_source&quot;</span></span><br></pre></td></tr></table></figure><p>可以找到一个叫 <code>bluez_source.XX_XX_XX_XX_XX_XX.a2dp_source</code> 的装置，请复制他的名字</p><p><img src="https://ci.cncn3.cn/b7cbe4f5adc5d111c40e2ff65be7cac2.png" alt="img"></p><h3 id="启动FM电台"><a href="#启动FM电台" class="headerlink" title="启动FM电台"></a>启动FM电台</h3><blockquote><p>请保持蓝牙音频内有输出，不然会断掉</p></blockquote><ul><li>蓝牙输入设备名：见上一条</li><li>发射频率：纯数字，符合你所在地区法律的无线电频段即可，单位 MHZ（我使用 87.2 mhz）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pacat --record -d 蓝牙输入装置名 | sox -t raw -b 16 -c 2 -v 1 -r 44100 -L -e signed-integer - -t wav - | sudo ./pifmrds -freq 发射频率 -audio -</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p><img src="https://ci.cncn3.cn/280da3794210ffcf59c1f88b6fd6b9d7.png" alt="img"></p><p>只要你能看到这样的 output，且收音机可以收到正确的音频，那就成功了</p><h3 id="遇到问题？"><a href="#遇到问题？" class="headerlink" title="遇到问题？"></a>遇到问题？</h3><p>我也不确定我有没有漏掉步骤，欢迎提醒我或问我问题</p><p>TG: <a href="https://t.me/mumubird">@mumubird</a></p><p>Mail: <a href="mailto:woodpackeraisser@gmail.com">woodpackeraisser@gmail.com</a></p><h3 id="有什么用吗"><a href="#有什么用吗" class="headerlink" title="有什么用吗"></a>有什么用吗</h3><ul><li>把收音机改造成蓝牙耳机，在短距离内的音质还是可以的</li><li>和邻居一起听歌</li><li>…</li></ul><p>好吧我也觉得没有用，但是确实很好玩，且很有成就感，对于我这样的对无线电并不了解的后端开发（</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用树莓派发送FM广播（无线电），透过手机的蓝牙音频&lt;/p&gt;
&lt;h2 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在使用前请先确保自己遵守自己所在地区的法律，发</summary>
      
    
    
    
    
    <category term="无线电" scheme="https://blog.cluckbird.cc/tags/%E6%97%A0%E7%BA%BF%E7%94%B5/"/>
    
    <category term="后端" scheme="https://blog.cluckbird.cc/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="树莓派" scheme="https://blog.cluckbird.cc/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>如何制作一个最简单的网页爬虫</title>
    <link href="https://blog.cluckbird.cc/2021/08/29/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%BD%91%E9%A1%B5%E7%88%AC%E8%99%AB/"/>
    <id>https://blog.cluckbird.cc/2021/08/29/%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E7%BD%91%E9%A1%B5%E7%88%AC%E8%99%AB/</id>
    <published>2021-08-29T07:13:07.000Z</published>
    <updated>2021-08-29T10:04:04.195Z</updated>
    
    <content type="html"><![CDATA[<h4 id="爬虫是什么？"><a href="#爬虫是什么？" class="headerlink" title="爬虫是什么？"></a>爬虫是什么？</h4><p>爬虫是一种自动化程式，用于自动爬取网络上的讯息，被爬取的目标大多是网页</p><h4 id="爬虫能做什么？"><a href="#爬虫能做什么？" class="headerlink" title="爬虫能做什么？"></a>爬虫能做什么？</h4><p>当然是自动化的爬取网页上的内容，这些内容可以是图片、文字<br>具体的使用例就比如 <del>pixiv</del> 爬虫，可以自动化的帮助我们爬取今日的 <del>R18</del> 排行榜</p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>因为是最简单的网页爬虫，所以我们这里选择使用 Python 开发。Python 拥有大量便于爬虫开发的库，可以十分方便的发起HTTP请求并使用正则过滤。</p><blockquote><p>如果阁下不了解Python是什么，请详见Python官网: <a href="https://python.org/">python.org</a></p></blockquote><h2 id="创建文件"><a href="#创建文件" class="headerlink" title="创建文件"></a>创建文件</h2><p>创建一个空白目录，在目录中创建一个 <code>.py</code> 文件，并导入我们这次需要使用的两个库: <code>requests</code>  <code>re</code></p><ul><li><code>requests</code> 方便的发起 HTTP 请求</li><li><code>re</code> 使用正则表达式过滤文字 </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br></pre></td></tr></table></figure><h2 id="选定目标"><a href="#选定目标" class="headerlink" title="选定目标"></a>选定目标</h2><p>我们爬取的目标选择 HK01 的新闻</p><ul><li>新闻标题</li><li>撰文人</li><li>内容和图片</li></ul><p><img src="https://ci.cncn3.cn/a891e52e92ff48b6ced160172b568a61.png" alt="示例"></p><h2 id="模拟浏览器发起-HTTP-请求"><a href="#模拟浏览器发起-HTTP-请求" class="headerlink" title="模拟浏览器发起 HTTP 请求"></a>模拟浏览器发起 HTTP 请求</h2><p>大部分网站的反爬机制都不会很严格，我们只需要添加用户代理头就可以通过验证（如果有其他验证，请尝试添加其他常见请求头）</p><ul><li>这里我们只添加 user-agent<ul><li><code>user-agent</code> 可以翻译为用户代理，表明用户使用的浏览器版本，装置设备等信息</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br><span class="line"></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36 Edg/92.0.902.78&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发起 Get 请求并取 text(html)</span></span><br><span class="line">html = requests.get(<span class="string">&quot;https://www.hk01.com/%E7%AA%81%E7%99%BC/669730/%E9%A6%AC%E6%96%99%E6%B0%B4%E5%BE%80%E6%9D%B1%E5%B9%B3%E6%B4%B2%E6%B8%A1%E8%BC%AA%E5%86%92%E7%85%99-320%E4%B9%98%E5%AE%A2%E5%8F%8A%E8%88%B9%E5%93%A1%E9%A0%86%E5%88%A9%E7%96%8F%E6%95%A3&quot;</span>).text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出刚刚请求到的内容</span></span><br><span class="line"><span class="built_in">print</span>(html)</span><br></pre></td></tr></table></figure><p>如果这里一切正常的话，运行程式应该可以看到这个页面的html原始码</p><h2 id="过滤html"><a href="#过滤html" class="headerlink" title="过滤html"></a>过滤html</h2><p>下一步是从请求到的HTML原始码内得到我们想要得到的内容，这个时候就用到了 re 库（正则匹配）</p><p>我们可以使用开发人员工具（在浏览器点击 F12 打开）来阅读这个页面的HTML原始码，来编写匹配使用的正则表达式</p><p><img src="https://ci.cncn3.cn/20509522aac9028f8784e3e66ed1a372.png" alt="示例"></p><p>发现这里的内容有固定的id名和标签名，我们就可以按这个特征来写正则表达式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;h1 id=\&quot;articleTitle\&quot;([\s\S]*?)&gt;([\s\S]*?)\&lt;\/h1\&gt;&#x27;</span>).findall(html)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(title)</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[(<span class="string">&#x27; data-author=&quot;朱雅霜&quot; data-category=&quot;突發&quot; data-type=&quot;article&quot; class=&quot;text-2xl md:text-2.5xl mb-3 md:mb-4 font-semibold text-black-78&quot;&#x27;</span>, <span class="string">&#x27;馬料水往東平洲渡輪冒煙\u3000320乘客及船員順利疏散&#x27;</span>)]</span><br></pre></td></tr></table></figure><p>这里输出的内容是一个列表套着一个元组，代表有一个匹配项和两个子匹配项，第二个子匹配项是我们需要的标题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以使用下标的方式取出内容（这里的\u3000320是unicode码）</span></span><br><span class="line"><span class="built_in">print</span>(title[<span class="number">0</span>][<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">馬料水往東平洲渡輪冒煙　320乘客及船員順利疏散</span><br></pre></td></tr></table></figure><h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>按这个方法完成所有的内容，并输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 伪造的 HTTP 请求头</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&quot;user-agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36 Edg/92.0.902.78&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发起 Get 请求并取 text(html)</span></span><br><span class="line">html = requests.get(<span class="string">&quot;https://www.hk01.com/%E7%AA%81%E7%99%BC/669730/%E9%A6%AC%E6%96%99%E6%B0%B4%E5%BE%80%E6%9D%B1%E5%B9%B3%E6%B4%B2%E6%B8%A1%E8%BC%AA%E5%86%92%E7%85%99-320%E4%B9%98%E5%AE%A2%E5%8F%8A%E8%88%B9%E5%93%A1%E9%A0%86%E5%88%A9%E7%96%8F%E6%95%A3&quot;</span>).text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 正则匹配标题</span></span><br><span class="line">title = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;h1 id=\&quot;articleTitle\&quot;([\s\S]*?)&gt;([\s\S]*?)\&lt;\/h1\&gt;&#x27;</span>).findall(html)</span><br><span class="line"><span class="comment"># 正则匹配撰稿人</span></span><br><span class="line">author = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;div class=\&quot;text-sm leading-6text-black-40 mb-0.5 flex flex-row md:pb-0.75\&quot;&gt;&lt;span class=\&quot;flex whitespace-nowrap\&quot;&gt;撰文：&lt;\/span&gt;&lt;span class=\&quot;flex\&quot;&gt;([\s\S]*?)&lt;\/span&gt;&lt;\/div&gt;&#x27;</span>).findall(html)</span><br><span class="line"><span class="comment"># 正则匹配正文内容</span></span><br><span class="line">text = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;article id=\&quot;article-content-section\&quot; class=&quot;cmp-article-detail&quot;&gt;([\s\S]*?)&lt;\/article&gt;&#x27;</span>).findall(html)[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># 取所有html tag</span></span><br><span class="line">tag = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;([\s\S]*?)&gt;&#x27;</span>).findall(text)</span><br><span class="line"><span class="comment"># 循环替换为空</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> tag:</span><br><span class="line">    text = text.replace(<span class="string">&quot;&lt;&quot;</span>+i+<span class="string">&quot;&gt;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(title[<span class="number">0</span>][<span class="number">1</span>])</span><br><span class="line"><span class="built_in">print</span>(author[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(text)</span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">馬料水往東平洲渡輪冒煙　320乘客及船員順利疏散</span><br><span class="line">朱雅霜 楊嘉朗</span><br><span class="line">今（29日）早10時許，一艘載320人的翠華船務渡輪，由馬料水開往東平洲，航行途中冒出濃煙。消防趕往現場，開喉為船隻降溫，翠華船務派出另一艘渡輪到場，在消防及水警協助下「船過船」疏散。上午11時37分，火警升為二級。船上318名乘客及2名船員全數順利登</span><br><span class="line">上另一艘渡輪，其後抵達東平洲，事故中無人受傷。一艘由馬料水開往東平洲的渡輪於途中冒煙，船上逾300人需疏散。（楊嘉朗攝）01新聞</span><br></pre></td></tr></table></figure><p><del>图片因为懒得写所以没写</del></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;爬虫是什么？&quot;&gt;&lt;a href=&quot;#爬虫是什么？&quot; class=&quot;headerlink&quot; title=&quot;爬虫是什么？&quot;&gt;&lt;/a&gt;爬虫是什么？&lt;/h4&gt;&lt;p&gt;爬虫是一种自动化程式，用于自动爬取网络上的讯息，被爬取的目标大多是网页&lt;/p&gt;
&lt;h4 id=&quot;爬虫能做什么</summary>
      
    
    
    
    
    <category term="后端" scheme="https://blog.cluckbird.cc/tags/%E5%90%8E%E7%AB%AF/"/>
    
    <category term="爬虫" scheme="https://blog.cluckbird.cc/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="教程" scheme="https://blog.cluckbird.cc/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>淺談前端模板pug</title>
    <link href="https://blog.cluckbird.cc/2021/08/03/%E6%B7%BA%E8%AB%87%E5%89%8D%E7%AB%AF%E6%A8%A1%E6%9D%BFpug/"/>
    <id>https://blog.cluckbird.cc/2021/08/03/%E6%B7%BA%E8%AB%87%E5%89%8D%E7%AB%AF%E6%A8%A1%E6%9D%BFpug/</id>
    <published>2021-08-03T07:48:17.000Z</published>
    <updated>2021-08-29T07:09:16.171Z</updated>
    
    <content type="html"><![CDATA[<p>在部署這個基於Hexo的Blog的時候，發現Hexo的Themes都使用 <code>.pug</code> 檔案， PUG 是什麼？</p><h2 id="PUG-是什麼？"><a href="#PUG-是什麼？" class="headerlink" title="PUG 是什麼？"></a>PUG 是什麼？</h2><p>PUG 是一種 HTML 模板語言，支援編寫 JavaScript 邏輯，省略了 HTML 的開、閉合標籤，看上去更加簡潔</p><blockquote><p>本頁<strong>版權聲明</strong>的 Pug 原始碼</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">.article</span><br><span class="line">    hr</span><br><span class="line">    h2 版權聲明</span><br><span class="line">    - var articleName = theme.copyright.name || config.author</span><br><span class="line">    - var articleUrl = theme.copyright.url || config.url</span><br><span class="line">    - var pageLink = page.permalink</span><br><span class="line">    - var licensePath = &#x27;http://creativecommons.org/licenses/by-nc-sa/4.0/&#x27;</span><br><span class="line">    != &#x27;| 作者：&#x27;  </span><br><span class="line">    a(href=url_for(articleUrl))=articleName</span><br><span class="line">    br</span><br><span class="line">    != &#x27;| URL：&#x27;</span><br><span class="line">    a(href=url_for(pageLink))=pageLink</span><br><span class="line">    br</span><br><span class="line">    != &#x27;| 許可協議：&#x27; </span><br><span class="line">    a(href=url_for(licensePath)) #&#123;&#x27;知識共享署名-非商業性使用-相同方式共享 4.0 國際許可協議&#x27;&#125;</span><br><span class="line">    hr</span><br></pre></td></tr></table></figure><p>在簡潔的同時，Pug也有好多缺點：例如在使用第三方開發套件的示例Code時，大部分皆為HTML，需要重寫為Pug才能使用。Pug在簡潔的同時也在降低可讀性，提升維護難度</p><p><del>筆者這樣的 Back-end development，還是HTML好</del></p><h2 id="撰寫-pug"><a href="#撰寫-pug" class="headerlink" title="撰寫 pug"></a>撰寫 pug</h2><p>Pug 相比 HTML 最大的不同是去掉了開、閉合標籤，結構和HTML相同</p><ul><li>這裡為了方便比對，將會使用前者PUG，後者HTML的寫法</li></ul><h4 id="結構單元"><a href="#結構單元" class="headerlink" title="結構單元"></a>結構單元</h4><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">section(class=&quot;testClass&quot;)</span><br><span class="line">    div(class=&quot;testClass2&quot;)</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span> <span class="attr">class</span>=<span class="string">&quot;testClass&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;testClass2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="閉合標籤"><a href="#閉合標籤" class="headerlink" title="閉合標籤"></a>閉合標籤</h4><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img(src=&quot;./test.webp&quot;)/</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./test.webp&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="內聯：嵌套DIV"><a href="#內聯：嵌套DIV" class="headerlink" title="內聯：嵌套DIV"></a>內聯：嵌套DIV</h4><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.testClass: .testClass2 testText</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;testClass&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;testClass2&quot;</span>&gt;</span>testText<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="屬性"><a href="#屬性" class="headerlink" title="屬性"></a>屬性</h4><p>可以使用逗號隔開，也可以不用。在屬性較多時可以豎排撰寫</p><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">a(href=&quot;//google.com.hk&quot; class=&quot;testClass&quot;) Google</span><br><span class="line">a(href=&quot;//google.com.hk&quot;, class=&quot;testClass&quot;) Google</span><br><span class="line">input(</span><br><span class="line">    type=&quot;checkbox&quot;</span><br><span class="line">    name=&quot;testInput&quot;</span><br><span class="line">    checked</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;//google.com.hk&quot;</span> <span class="attr">class</span>=<span class="string">&quot;testClass&quot;</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">name</span>=<span class="string">&quot;testInput&quot;</span> <span class="attr">checked</span> /&gt;</span> </span><br></pre></td></tr></table></figure></li></ul><h5 id="Class-ID"><a href="#Class-ID" class="headerlink" title="Class, ID"></a>Class, ID</h5><p>Class 同 ID 支援直接撰寫在 Tag 後方</p><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">div.testClass</span><br><span class="line">    div#idName</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;testClass&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;#idName&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="註解"><a href="#註解" class="headerlink" title="註解"></a>註解</h4></li></ul><ol><li><strong>單行註解</strong><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// 註解</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 註解 --&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>單行註解，不渲染</strong><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//- 註解</span><br><span class="line">.testClass</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;testClass&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>多行註解</strong><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 註解註解註解註解註解註解</span><br><span class="line">  註解註解註解註解註解註解</span><br><span class="line">  註解註解註解註解註解註解</span><br><span class="line">//- 註解註解註解註解註解註解</span><br><span class="line">  註解註解註解註解註解註解</span><br><span class="line">  註解註解註解註解註解註解</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 註解註解註解註解註解註解</span></span><br><span class="line"><span class="comment">  註解註解註解註解註解註解</span></span><br><span class="line"><span class="comment">  註解註解註解註解註解註解 --&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h4 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h4><p>標籤內的文字需要在tag後空一格撰寫</p><ul><li>PUG<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">p 我係一個人</span><br></pre></td></tr></table></figure></li><li>HTML<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我係一個人<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="PUG-官網"><a href="#PUG-官網" class="headerlink" title="PUG 官網"></a>PUG 官網</h3><ul><li><a href="https://pugjs.org/">https://pugjs.org</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在部署這個基於Hexo的Blog的時候，發現Hexo的Themes都使用 &lt;code&gt;.pug&lt;/code&gt; 檔案， PUG 是什麼？&lt;/p&gt;
&lt;h2 id=&quot;PUG-是什麼？&quot;&gt;&lt;a href=&quot;#PUG-是什麼？&quot; class=&quot;headerlink&quot; title=&quot;P</summary>
      
    
    
    
    
    <category term="前端" scheme="https://blog.cluckbird.cc/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
